git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\

source ~/.zshrc
ls
ll
c
cls
clear
git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"\

source ~/.zshrc
ls
clear
source ~/.zshrc
source ~/.zpreztorc
prompt -l
git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-${XDG_CONFIG_HOME:-$HOME/.config}/zsh}/.zprezto"\

source ~/.zshrc
zsh
ls
clear
zsh
ln
ln /Users/amro/.config/zsh/.zshrc:
_prompt -l
${ZDOTDIR:-$HOME}/.zpreztorc
prompt -l
brew install prompt
prompt -l
cd repos/mmservices
ls
cd
c
clear
docker compose upd -d --build user-service
docker compose up -d --build user-service
docker compose up -d --build database
cd .config
cd nvim
ls
mv lua/user/lua/nougat/bar/init.lua lua/user/nougat/bar/init.lua
cd lua/user
rm -rf lua/nougat/bar/init.lua
cd ../..
ls
cd lua
cd ..
mkdir test
cd te
cd test
git clone https://github.com/MunifTanjim/nougat.nvim.git
ls
cd nougat.nvim
ls
cd lua
sl
ls
cd ..
cd nv
cd nvim
cd lua
ls
rm -rf user/nougat
mv ../../test/nougat.nvim/lua/nougat nougat
ls
cd nougat
ls
cd bar
ls
cat util.lua
sudo pkill bluetooth
ssh ubuntu@100.64.75.119 -i ~/.ssh/jenkins-auto.pem
ssh ubuntu@10.0.11.76 -i ~/.ssh/jenkins-auto.pem
ls
vim credentials
cat credentials
sleep 3 ; docker ps
sleep 3 | docker ps
clear
docker ps
docker logs $(docker ps -aq | grep build)
docker ps -aq | grep build
docker ps -aq 
docker ps --help
docker ps --format '{{.Names}}'
docker ps -a $(docker ps --format '{{.Names}}' | grep build)
docker ps --format '{{.Names}}'
docker ps --format '{{.Names}}' | grep build
docker logs $(docker ps --format '{{.Names}}' | grep build)
docker compose up -d --build create-queue
docker ps
docker wait mmservices-create-queue-1
docker logs mmservices-create-queue-1
lf
cd repos/mmservices
v
v
v
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
cd repos/mmservices
v
pyenv shell venv
pyenv shell list
pyenv shell --help
pyenv shell venv
pyenv init
v ~/.config/zsh/.zshrc
zsh
pyenv shell venv
pyenv shell ls
pyenv shell --help
pyenv shell -
pyenv shell
cd 
cd .pyenv
ls
cd versions
ls
cd ..
cd shims
ls
cd
cd repos/mmservices
clear
pyenv local venv
pyenv install --list
cd tests
pyenv install --list
pyenv install 3.11.1
pyenv virtualenv 3.11.1 mmservices
pyenv versions
v
cd ..
v
cd tests
pyenv shell
pyenv init
zsh
clear
ls
pyenv init
pyenv shell
pyenv --version
pyenv --help
pyenv local
pyenv version
pyenv install 3.11.1
pyenv vestion list
pyenv version list
pyenv versions list
pyenv versions 
pyenv versions --help
pyenv --help
ls
cd ..
ls
cd venv
ls
source bin/activate
ls
cd ..
v
clear
source venv/bin/activate
v
zsh
v
source venv/bin/activate
env | grep PYTHONPATH
pwd
v
pip install neovim
v
k9s
pip install neovim
k9s
v
zsh
v
zsh
source venv/bin/activate
v
zsh
source venv/bin/activate
v
pip install -e .[dev]
zsh
omz plugin list
omz plugin list | zfz
omz plugin list | zf
omz plugin list | fzf
cd
zsh
cd .oh-my-zsh
ls
cd plugins
ls
cd
zsh
vrun
zsh
brew update\

brew install .pyenv\

brew install pyenv\

zsh
clear
zsh
clear
zsh
v
ssh ubuntu@100.64.23.166 -i ~/.ssh/jenkins-auto.pem
pip install pylsp-rope
v
ssh ubuntu@100.64.71.221 -i ~/.ssh/jenkins-auto.pem
docker-compose -f docker-compose-amd64.yml up -d --build database-amd64
ssh ubuntu@i-07ac2c56eb3528486 -i ~/.ssh/jenkins-auto.pem
ssh ubuntu@100.64.38.61 -i ~/.ssh/jenkins-auto.pem
v
docker ps
docker inspect sqs-mock --format="{{ .State.Health.Status }}"
clear
sudo pkill bluetooth
ls
exit
clear
vim
v
which zsh
ld
lf
tmux new -s home
tmux ls -F "#S" | xargs -n 1 tmux kill-session
brew install reattach-to-user-namespace
tmux kill-session 0
tmux kill-session 
tmux ls
tmux new -s home
tmux new -s mmservices
tmux new -s MMCI
pwad
pwd
tmux new -s jenkins-lib
cd repos/MMCI
v
v
v
cd .config
vim
v
v
v
v nvim/init.lua
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
vim nvim/lua/user/bubbly.lua
code nvim/lua/user/bubbly.lua 
v
v
v
v
v
v
v
v
v
v
v
v
v nvim/init.lua
zsh
cd repos/minutecloud-jenkins-library
vim
ssh ubuntu@10.0.11.205 -i ~/.ssh/jenkins-auto.pem
cd repos/mmservices
ls
docker build -f tests/Dockerfile -t tests .
cdt ~/bqcreds.json
cat ~/bqcreds.json
ssh ubuntu@100.64.157.170 -i ~/.ssh/jenkins-auto.pem
yes
ssh ubuntu@100.64.157.170 -i ~/.ssh/jenkins-auto.pem
ssh ubuntu@100.64.93.206 -i ~/.ssh/jenkins-auto.pem
ssh ubuntu@100.64.159.38 -i ~/.ssh/jenkins-auto.pem
ssh ubuntu@100.64.29.68 -i ~/.ssh/jenkins-auto.pem
ssh ubuntu@100.64.56.27 -i ~/.ssh/jenkins-auto.pem
sudo pkill bluetooth
zsh
cd repos/MMCI
ls
cd scripts
ls
cat add-secret-aws.sh
bash setup-mfa-token.sh
bash add-secret-aws.sh
bash add-secret-aws.sh aws-creds ~/repos/mmservices/credentials
export SECRET_NAME='aws-creds'
export SECRET_PATH='~/repos/mmservices/credentials'
./add-secret-aws.sh
bash add-secret-aws.sh
cd
k9s
cd repos/MMCI
cd terraform/k8s-automation
ls
terraform apply -target module.eks
terraform init
terraform init -upgrade
terraform apply -target module.eks
terraform apply -target module.eks
terraform apply -target module.eks
tmux attach -t mmservices
tmux new -s mmservices
cd repos/mmservices
tmux new -s MMCI home jenkis-lib
tmux attach -t mmservices
tmux new -s MMCI 
clear
ls
tmux new -s home
tmux new -s jenkis-lib
cd repos/minutecloud-jenkins-library
clear
cd repos/MMCI
clear
v
brew uninstall alfred
cd repos/mmservices
tmux new -s jenkis-lib
tmux attach -t mmservices
sudo pkill bluetooth
ls .ssh
ssh -i ~/.ssh/jenkins-auto.pem  ubuntu@10.0.11.9 
cd .config
v
cd .config
git clone https://github.com/akinsho/bufferline.nvim.git
cd bufferline.nvim
ls
cd lua
ls
mv bufferline ~/.config/nvim/lua/user
v
mv bufferline ~/.config/nvim/lua/user
ls
cd ..
git pull
git status
git restore .
ls
cd lua
ls
mv bufferline ~/.config/nvim/lua/user
mv bufferline.lua ~/.config/nvim/lua/user
pwd
v
cd
cd .config/nvim
ls
cd lua
cd user
ls
mv bufferline ..
ls
cd ..
ls
cd user
ls
mv bufferline.lua ..
v
cd
cd .config/nvim/lua
ls
mv bufferline.lua user
v
v nvim/init.lua
exir
exit
sad
ls
v
exit
brew install cmacrae/formulae/spacebar\

brew services start spacebar\

brew services restart spacebar
brew services stop spacebar
cd
v .zshrc
v nvim/init.lua
zsh
clear
exit
zsh
exit
exit
zsh
cd .config
v
exit
ls
clear
tmux attach -t mmservices
ls
exit
/usr/libexec/java_home -V | grep jdk\

exit
exit
exit
exit
ls
exit
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
clear
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
zsh
clear
zsh
tmux show-option -qvgs default-terminal
tmux attach -t mmservices
tmux attach -t mmservices
tmux show-option -qvg default-terminal\

tmux attach -t mmservices
tmux attach -t mmservices
tmux show-option -qvg default-terminal\

tmux show-option -qvgs default-terminal
zsh
zsh
tmux attach -t mmservices
v
sudo npm i -g alacritty-themes
v
alacritty-themes Gruvbox-Dark
alacritty-themes
v
v
pip install pynvim
pip install --upgrade pip\

pip install --upgrade pynvim
pip install --upgrade pynvim
brew install gnu-sed
ls
mkdir lsp
cd lsp
ls
git clone https://github.com/GroovyLanguageServer/groovy-language-server.git
./gradlew build
cd lsp
ls
cd groovy-language-server
ls
./gradlew build
ls
./gradlew build
clear
./gradlew build
cd
cd .config
mv ~/.config/nvim/ ~/.config/nvim.bak\

git clone https://github.com/arturgoms/nvim.git ~/.config/nvim\

ls
cd nvim
ls
exot
exit
ls
cd
rm -rf .local/share/nvim/site/pack/packer
rm -rf .config/nvim/plugin/packer_compiled.lua
cd .config
cd nvim
ls
cd lua
mkdir plugins
cd plugins
v init.lua
mv ../user/plugins.lua ./init.lua
ls
v init.lua
v init.lua
v init.lua
v init.lua
sudo pkill bluetooth
cd
cd .co
cd .config
v
v
v
v
v
v
v
zsh
zsh
ls
ll
clear
pwd
cd
cd repos/mmservices
ls
cd
vim
v
zsh
brew install cargo
brew install rust\

zsh
cd .cargo
mkdir .cargo
cd .cargo
touch env
cd
zsh
zsh
ls
lf
ll
ls -la
brew install exa
brew install lesspipe
brew install exiftool
brew install bat
zsh
clear
zsh
v
zsh
cat $JAVA_HOME
echo $JAVA_HOME
v
v
v
v
zsh
ls
fzf
lessfilter-fzf
less
exiftool
exiftool .
exa
fzf
clear
fzf
/usr/libexec/java_home -V | grep jdk\

v
cd ..
cd ..
cd ..
v
zsh
zsh
cd .cargo
cat env
ls
cd
alacritty --print-events
clear
brew list
cd ~/Library/Caches
ls | grep log
ll
r
ll
cd
clear
cd .config/nvim/lua/user
ls
touch new-tree.lua
brew install zsh-history-substring-search
zsh
clear
zsh
clear
zsh
zsh
exit
c
clear
brew install JDK
 brew install --cask adoptopenjdk\

docker compose up -d --build mongo
docker compose up -d --build mongo
docker logs mongo
docker compose up -d --build content-discovery-service
docker logs content-discovery-service
docker compose up -d --build elasticsearch
docker logs content-discovery-service
docker logs content-discovery-service
docker logs content-discovery-service
docker compose up -d --build mongo
docker compose up -d --build content-discovery-service
zsh
pip install "python-lsp-server[all]"
pip install -U setuptools
pip install ".[test]" && pytest
pip install ".[tests]" && pytest
\:qa
docker compose up -d --build allure
docker ps
docker ps 0a
docker ps -a
docker compose up -d --build allure
docker ps
docker exec -it allure sh
docker exec -it allure sh
ls
echo PWD
echo $PWD
cd allure-reports
ls
latency
cd latest
ls
open index.html
cd data
ls
cd ..
cd ..
ls
cd 3
ls
open index.html
clear
cd
cd repos/mmservices
ls
v
nvim --startuptime time.log
ls
cat time.log
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
sudo npm install java-caller --save
v
top
cd repos/mmservices
docker compose down
docker system prone
docker system prune -af
k9s
k9s
sudo pkill bluetooth
k9s
k9s
kubectl logs jenkins-0
sudo pkill bluetooth
sudo npm i -g pyright
brew install docker
docker 
brew srevice start docker
brew start docker
brew install anakinls
pip install anakin-language-server
sudo     npm install -g npm-groovy-lint\

cd
cd .java-caller
ls
ls
ls
cd
java-caller 
ls
cd .java-caller
ls
npm list -g
ll /opt/homebrew/lib/
ll /opt/homebrew/lib/node_modules/npm-groovy-lint
ln -s /opt/homebrew/lib/node_modules/npm-groovy-lint ~/.java-caller
ls
unlink npm-groovy-lint
ls
rm -rf *
ls
ln -s /opt/homebrew/lib/node_modules/npm-groovy-lint/ ~/.java-caller
ls
unlink npm-groovy-lint
ln -s /opt/homebrew/lib/node_modules/npm-groovy-lint/* ~/.java-caller
ls
cd
brew list
brew list | grep jre
brew isnatll jre
brew install jre
brew install jreleaser
ls
cd .config
v
cd co
cd commons
ls
chmod 755 tmux-cht.sh
./tmux-cht.sh
chmod 755 tmux-sessionizer
./tmux-sessionizer
cd ..
tic alacritty/xterm
TERM=xterm-256color
v
TERM=xterm-256color vim
TERM=xterm-256color v
echo $TERM
echo -e "\e[3mItalic"
TERM=xterm-256color
XTERM_version=9999 TERM=xterm-256color
nvim -V3log
nvim 
tic
TERM=alacritty
v
echo -e "\e[3mitalic\e[23m"
infocmp $TERM | grep sitm\
        sgr0=\E(B\E[m, sitm=\E[3m, smacs=\E(0, smam=\E[?7h,\

infocmp $TERM | grep sitmsgr0=\E(B\E[m, sitm=\E[3m, smacs=\E(0, smam=\E[?7h,\
\

cd tmux
ls
v screen-256color.terminfo
tic screen-256color.terminfo
cd
ls
ls | grep .vimrc
vi .vimrc
cd .config
ls
v
env TERM=screen-256color tmux
clear
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
zsh
echo $JAVA_HOME
z
v
v
v
v
v nvim/init.lua
v nvim/init.lua
v nvim/init.lua
v nvim/init.lua
v nvim/init.lua
v nvim/init.lua
v
v
v
v
v
v
v
v
v
v
v
v
clear
# required\
mv ~/.config/nvim ~/.config/nvim.bak\
\
# optional but recommended\
mv ~/.local/share/nvim ~/.local/share/nvim.bak\
mv ~/.local/state/nvim ~/.local/state/nvim.bak\
mv ~/.cache/nvim ~/.cache/nvim.bak
mv ~/.config/nvim ~/.config/nvim.bak\

clear
ls
ll
mv ~/.local/share/nvim ~/.local/share/nvim.bak\

mv ~/.local/state/nvim ~/.local/state/nvim.bak\

mv ~/.cache/nvim ~/.cache/nvim.bak
git clone https://github.com/LazyVim/starter ~/.config/nvim\
\

rm -rf ~/.config/nvim/.git
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
cd nvim
nvim init.lua
ls
ll
cd lua
ls
cd config
ls
mv lazy.lua init.lua
ls
v
mv init.lua lazy.lua
ls
cd ..
ls
cd ..
ls
v init.lua
v init.lua
v init.lua
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
pwd
ls
zsh
clear
pwd
cd ..
cd ..
ls
cd nvim
ls
rm -rf .git
ls
cd ..
v
v
v
v
v
v
cd
cd repos/mmservices
v
exit
